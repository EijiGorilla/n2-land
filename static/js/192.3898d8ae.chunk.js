"use strict";(self.webpackChunkn2_land=self.webpackChunkn2_land||[]).push([[192],{192:(e,t,o)=>{o.r(t),o.d(t,{default:()=>w});var r=o(35143),n=o(69098),s=o(42553),i=o(46053),l=(o(81806),o(76460),o(47249),o(6409)),p=o(85842),a=o(17707),y=o(19902),u=o(31608),d=o(38432),m=o(59187);let h=class extends(n.A.ClonableMixin(s.A)){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(e,t,o){null!=e&&(t.geometryType=(0,y.getJsonType)(e),t[o]=JSON.stringify(e.toJSON()))}};(0,r._)([(0,i.MZ)({types:u.yR,json:{read:y.fromJSON,write:!0}})],h.prototype,"geometry",void 0),(0,r._)([(0,a.K)("geometry")],h.prototype,"writeGeometry",null),(0,r._)([(0,i.MZ)({json:{write:!0}})],h.prototype,"objectIds",void 0),(0,r._)([(0,l.e)(d.x,{ignoreUnknown:!1,name:"spatialRel"})],h.prototype,"spatialRelationship",void 0),(0,r._)([(0,i.MZ)({type:m.default,json:{name:"time",write:!0}})],h.prototype,"timeExtent",void 0),(0,r._)([(0,i.MZ)({type:String,json:{write:!0}})],h.prototype,"where",void 0),h=(0,r._)([(0,p.$)("esri.rest.support.ImageGPSInfoParameters")],h);const w=h}}]);
//# sourceMappingURL=192.3898d8ae.chunk.js.map